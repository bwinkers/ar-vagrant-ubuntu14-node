<h1>{{__  'page.account.contact.h1'}}</h1>
<a href="#" data-toggle="tooltip"  data-placement="right"  title="{{__ 'page.account.contact.html.description'}}">Need Help?</a>
<div class="row">
    
    <div class="col-sm-12 col-md-6">
        <!--ROW LEFT COLUMN-->
        <div id='ar-account-contact'>
            <p>First name: <input class='input-small pull-right' data-bind="value: givenName, valueUpdate: 'keyup'" /></p>
            <p>Last name: <input class='input-small pull-right' data-bind="value: familyName, valueUpdate: 'keyup'" /></p>
            <p>Hello, <span data-bind="text: fullName"> </span>!</p>
            
            <button data-bind="click: save">Save</button>
        </div>
        <script>
            // Connect the view model to the input fields
            var ContactViewModel = function(model) {
                this.givenName = kb.observable(model, 'givenName');
                this.familyName = kb.observable(model, 'familyName');
                this.fullName = ko.computed((function() {return "" + (this.givenName()) + " " + (this.familyName());}), this);
                
                this.save = function() {
                    $.ajax("/api/account/contact/", {
                        data: {
                            json: ko.toJSON({
                                person: this
                            })
                        },
                        type: "POST",
                        dataType: 'json',
                        success: function(result) {
                            alert(ko.toJSON(result))
                        }
                    });
                };
            };

        </script>
   </div>
    
    <div class="col-sm-12 col-md-6">
     <!--ROW RIGHT COLUMN-->
       

   </div>
     
</div>

<script>
    // The data as delivered in a standard format from the backend RESTful web services
    var contactDataModel = new Backbone.Model({givenName: "Brian", familyName: "Winkers"});
    // Create the view model with the view data
    var contactViewModel = new ContactViewModel(contactDataModel);
    // Glue the pieces together
    ko.applyBindings(contactViewModel, $('#ar-account-contact')[0]); 
</script>

